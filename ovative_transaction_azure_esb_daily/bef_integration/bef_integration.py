import xml.etree.ElementTree as ET
from google.cloud import pubsub_v1
import datetime

# Your GCP project and Pub/Sub topic
PROJECT_ID = "ecomm-services-stage"
TOPIC_NAME = "bef-events"

_publisher = pubsub_v1.PublisherClient()
_topic_path = _publisher.topic_path(PROJECT_ID, TOPIC_NAME)

def generate_bef_log(correlation_id, parent_correlation_id,
                     payload, code, severity,
                     flow_name, message,
                     application_component,
                     source_name="", source_component=""):
    """
    Generate the BEF log in XML format.

    Args:
        correlation_id (str): The correlation ID (file name).
        parent_correlation_id (str): The parent correlation ID (bucket name).
        payload (str): Payload (empty or custom).
        code (int): Event code (e.g., 10 for pickup).
        severity (int): Severity level.
        flow_name (str): The flow name.
        message (str): Descriptive message.
        application_component (str): Application component name.
        source_name (str): Optional source queue name.
        source_component (str): Optional source component name.

    Returns:
        str: XML string of the BEF log.
    """
    root = ET.Element("InfoEvent")

    ET.SubElement(root, "Payload").text = payload
    ET.SubElement(root, "Local_Correlation_Id").text = correlation_id
    ET.SubElement(root, "Parent_Correlation_Id").text = parent_correlation_id
    ET.SubElement(root, "moment")
    ET.SubElement(root, "pid")
    ET.SubElement(root, "root_pid")
    ET.SubElement(root, "father_pid")
    ET.SubElement(root, "project")
    ET.SubElement(root, "job")
    ET.SubElement(root, "context")
    ET.SubElement(root, "priority").text = "3"
    ET.SubElement(root, "type")
    ET.SubElement(root, "origin")
    ET.SubElement(root, "code").text = str(code)
    ET.SubElement(root, "MuleFlowName").text = flow_name
    ET.SubElement(root, "MsgType").text = "NONXML"
    ET.SubElement(root, "Severity").text = str(severity)
    ET.SubElement(root, "message").text = message
    ET.SubElement(root, "SourceQueueName").text = source_name
    ET.SubElement(root, "SourceComponent").text = source_component
    ET.SubElement(root, "ApplicationComponent").text = application_component
    ET.SubElement(root, "Timestamp").text = datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")

    return ET.tostring(root, encoding="utf-8").decode()

def publish_bef_log(xml_log):
    """
    Publish the BEF log XML to the configured Pub/Sub topic.

    Args:
        xml_log (str): The XML log string generated by generate_bef_log().
    """
    _publisher.publish(_topic_path, xml_log.encode("utf-8"))
    print(f"Published BEF log to topic {TOPIC_NAME}")
